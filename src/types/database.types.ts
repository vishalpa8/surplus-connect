// This file is auto-generated by the Supabase CLI.
// Do not edit this file directly.

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[];

export interface Database {
  public: {
    Tables: {
      profiles: {
        Row: {
          id: string;
          email: string | null;
          role: "vendor" | "consumer" | "ngo" | null;
          name: string | null;
          avatar_url: string | null;
          meals_saved: number;
          badge_id: number | null; // New: badge assigned
          created_at: string;
        };
        Insert: {
          id: string;
          email?: string | null;
          role?: "vendor" | "consumer" | "ngo" | null;
          name?: string | null;
          avatar_url?: string | null;
          meals_saved?: number;
          badge_id?: number | null;
          created_at?: string;
        };
        Update: {
          id?: string;
          email?: string | null;
          role?: "vendor" | "consumer" | "ngo" | null;
          name?: string | null;
          avatar_url?: string | null;
          meals_saved?: number;
          badge_id?: number | null;
          created_at?: string;
        };
      };
      badges: {
        Row: {
          id: number;
          name: string;
          description: string | null;
          icon_url: string | null;
          threshold: number;
        };
        Insert: {
          id?: number;
          name: string;
          description?: string | null;
          icon_url?: string | null;
          threshold: number;
        };
        Update: {
          id?: number;
          name?: string;
          description?: string | null;
          icon_url?: string | null;
          threshold?: number;
        };
      };
      listings: {
        Row: {
          id: number;
          vendor_id: string;
          name: string;
          description: string | null;
          quantity: string | null;
          expiry_time: string;
          pickup_window_start: string;
          pickup_window_end: string;
          image_url: string | null;
          location: unknown | null; // Consider using [number, number] or GeoJSON in the future
          status: "available" | "reserved" | "expired";
          created_at: string;
        };
        Insert: {
          id?: number;
          vendor_id: string;
          name: string;
          description?: string | null;
          quantity?: string | null;
          expiry_time: string;
          pickup_window_start: string;
          pickup_window_end: string;
          image_url?: string | null;
          location?: unknown | null;
          status?: "available" | "reserved" | "expired";
          created_at?: string;
        };
        Update: {
          id?: number;
          vendor_id?: string;
          name?: string;
          description?: string | null;
          quantity?: string | null;
          expiry_time?: string;
          pickup_window_start?: string;
          pickup_window_end?: string;
          image_url?: string | null;
          location?: unknown | null;
          status?: "available" | "reserved" | "expired";
          created_at?: string;
        };
      };
      reservations: {
        Row: {
          id: number;
          listing_id: number;
          consumer_id: string;
          status: "active" | "completed" | "cancelled";
          created_at: string;
        };
        Insert: {
          id?: number;
          listing_id: number;
          consumer_id: string;
          status?: "active" | "completed" | "cancelled";
          created_at?: string;
        };
        Update: {
          id?: number;
          listing_id?: number;
          consumer_id?: string;
          status?: "active" | "completed" | "cancelled";
          created_at?: string;
        };
      };
      notifications: {
        Row: {
          id: number;
          user_id: string;
          type: string;
          message: string;
          data: Json | null;
          read: boolean;
          created_at: string;
        };
        Insert: {
          id?: number;
          user_id: string;
          type: string;
          message: string;
          data?: Json | null;
          read?: boolean;
          created_at?: string;
        };
        Update: {
          id?: number;
          user_id?: string;
          type?: string;
          message?: string;
          data?: Json | null;
          read?: boolean;
          created_at?: string;
        };
      };
      analytics: {
        Row: {
          id: number;
          user_id: string;
          event_type: string;
          meta: Json | null;
          created_at: string;
        };
        Insert: {
          id?: number;
          user_id: string;
          event_type: string;
          meta?: Json | null;
          created_at?: string;
        };
        Update: {
          id?: number;
          user_id?: string;
          event_type?: string;
          meta?: Json | null;
          created_at?: string;
        };
      };
      contact_messages: {
        Row: {
          id: number;
          name: string;
          email: string;
          message: string;
          created_at: string;
        };
        Insert: {
          id?: number;
          name: string;
          email: string;
          message: string;
          created_at?: string;
        };
        Update: {
          id?: number;
          name?: string;
          email?: string;
          message?: string;
          created_at?: string;
        };
      };
    };
    Views: {
      [_ in never]: never;
    };
    Functions: {
      update_meals_saved: {
        Args: Record<PropertyKey, never>;
        Returns: unknown;
      };
      assign_badge: {
        Args: Record<PropertyKey, never>;
        Returns: unknown;
      };
      expire_listings: {
        Args: Record<PropertyKey, never>;
        Returns: void;
      };
    };
    Enums: {
      [_ in never]: never;
    };
    CompositeTypes: {
      [_ in never]: never;
    };
  };
}
